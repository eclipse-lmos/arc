"use strict";(self.webpackChunkarc=self.webpackChunkarc||[]).push([[285],{2880:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"clients/langchain4j","title":"LangChain4J","description":"LangChain4J is a Java library that provides a uniform interface to multiple language models.","source":"@site/docs/02-clients/langchain4j.md","sourceDirName":"02-clients","slug":"/clients/langchain4j","permalink":"/arc/docs/clients/langchain4j","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"LangChain4J"},"sidebar":"tutorialSidebar","previous":{"title":"Google Gemini","permalink":"/arc/docs/clients/gemini"},"next":{"title":"Ollama Client","permalink":"/arc/docs/clients/ollama"}}');var a=i(4848),l=i(8453);const r={title:"LangChain4J"},c=void 0,o={},s=[];function d(n){const e={code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"LangChain4J is a Java library that provides a uniform interface to multiple language models."}),"\n",(0,a.jsx)(e.p,{children:"The Arc Framework provides a wrapper for the LangChain4J ChatLanguageModel interface,\nwhich allows us to use any LangChain4J client within our Arc Agents."}),"\n",(0,a.jsx)(e.p,{children:"Supported LangChain4J clients:"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Model"}),(0,a.jsx)(e.th,{children:"Package"}),(0,a.jsx)(e.th,{children:"Supported Version"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Amazon Bedrock"}),(0,a.jsxs)(e.td,{children:["dev.langchain4j",":langchain4j-bedrock"]}),(0,a.jsx)(e.td,{children:"0.36.2"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Google Gemini"}),(0,a.jsxs)(e.td,{children:["dev.langchain4j",":langchain4j-google-ai-gemini"]}),(0,a.jsx)(e.td,{children:"0.36.2"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Google Gemini"}),(0,a.jsxs)(e.td,{children:["dev.langchain4j",":langchain4j-ollama"]}),(0,a.jsx)(e.td,{children:"0.36.2"})]})]})]}),"\n",(0,a.jsx)(e.p,{children:"Example:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-kotlin",children:'// Gemini\nval geminiClient = LangChainClient(\n    LangChainConfig(\n        modelName = config.modelName,\n        url = config.url,\n        accessKeyId = null,\n        secretAccessKey = null,\n        apiKey = config.apiKey,\n    ),\n    geminiBuilder(),\n    eventPublisher,\n  )\n\n// Amazon Bedrock\nval bedrockClient = LangChainClient(\n    LangChainConfig(\n        modelName = config.modelName,\n        url = config.url,\n        accessKeyId = config.accessKey,\n        secretAccessKey = config.accessSecret,\n        apiKey = null,\n    ),\n    bedrockBuilder(),\n    eventPublisher,\n)\n\n// Ollama \nval ollamaClient = LangChainClient(\n    LangChainConfig(\n        modelName = config.modelName,\n        url = config.url, // defaults to "http://localhost:11434"\n    ),\n    ollamaBuilder(),\n    eventPublisher,\n)\n\n// The clients can then be used in a ChatCompleterProvider\nval chatCompleterProvider = ChatCompleterProvider { clientId ->\n    when (clientId) {\n        "gemini" -> geminiClient\n        "bedrock" -> bedrockClient\n        "ollama" -> ollamaClient\n        else -> throw IllegalArgumentException("Unknown client id: $clientId")\n    }\n}\n\n'})})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var t=i(6540);const a={},l=t.createContext(a);function r(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);